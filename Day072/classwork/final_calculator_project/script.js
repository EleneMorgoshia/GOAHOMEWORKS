//მივწვდეთ html ელემენტებს
const btnNumbers = document.getElementsByClassName('numbers')
const btnOperators = document.getElementsByClassName("operators")
const btnEquals = document.getElementById('equal')
const view = document.getElementById('sum')

let input = [] //ვქმნით სიას, სადაც დაემატებოდა დაქლიქებული ელემენტებ
let newS ='' //ვქმნით სტრინგს,რადგან მოქმედებები მოგვიწევს მმრავალნიშნა რიცხვებზე

for(let i = 0 ; i < btnNumbers.length ; i++){ // ვქმნით ლუფს,რადგან ეს ოპერაციები შესრულდეს თითოეული ღილაკის დაქლიქების დროს
    btnNumbers[i].addEventListener('click',function(){ // ნებისმიერი ღილაკის დაქლიქების დროს
        view.innerHTML += btnNumbers[i].innerHTML // რა ღილაკსაც(ციფრს ან მათ ოპერაციას) ვაქლიქებთ ,გამოჩნდება ეკრანზე
        newS += btnNumbers[i].innerHTML // შექმნილ სტრინგში ვამატებთ დაქლიქებულ ღილაკს(ციფრსაც და მათ ოპერაციასაც)
    })
}

for(let i = 0 ; i < btnOperators.length ; i++){ // ვქმნით ლუფს, რადგან ეს ოპერაციები შესრულდეს ნებისმიერი მათემატიკური ოპერაციისთვის(+,-,*,/)
    btnOperators[i].addEventListener('click',function(){ // როდესაც დავაქლიქებთ მათემატიკურ ოპერაციას
        input.push(newS) // სიაში ემატება სტრინგი(ანუ ციფრები მათემატიკუ ოპერაციებამდე)
        newS = '' // ვასუფთავებთ სტრინგს(იმიტომრომ მრავალჯერადად ფუნქციური იყოს სიაში ჩაყრის მეთოდი) 
        input.push(btnOperators[i].innerHTML) // სიაში ვამატებთ მათემატიკუ ოპერაციას ( დამოუკიდებელი ელემენტი)
        view.innerHTML += btnOperators[i].innerHTML // ეკრანზე გამოვა მათემატკური ოპერაცია ( ანუ თუ მაგ შევასრულებთ მიმატებას , გამოვა + ნიშანი)
    })
}

btnEquals.addEventListener('click',function(){ // როდესაც დავაქლექებთ ტოლობის ღილაკს
    let result = 0 // ვქმნით ცვლადს,შედეგს, რომელიც უქნება საბოლოო პასუხი ჩვენი მოქმედებების

    // list = ['5','+','5','*','2'] // სიაში არის სტრინგ ტიპის ელემენტები
    // გამრავლების მერე list = ['5','+','10']


    // გამრავლებისა და გაყოფის გაიდლაინი - პირველად ვწერთ გამრავლება/გაყოფის ლუფებს,რადგან ისინი არიან პრიორიტეტული ოპერატორბი(ჯერ ისინი უნდა შესრულდეს)
    for(let i = 0 ; i < input.length ; i ++){ // ვქმნით ლუფს,რადგან სიაში არსებულ ყველა ელემენტთან გვინდა რომ გვქონდეს წვდომა
        if(input[i] == '*'){ //თუ სიიაში არსებული ელემენიტ უდრის გამრავლებას
            result = parseFloat(input[i-1]) * parseFloat(input[i+1]) // საბოლოო შედეგი უდრის გამრავლების წინა ელემენტის ნამრავლს , გამრავლების შემდეგი ელემენტის ნარმავლზე(parseFloat - სტრინგს აქცევს ინტეჯერად )
            input[i-1] = result //გამრავლების ნიშნის წინა მდგომი ელემენტი შეიცვლება ნამრავლით ( ჩვენი სიის მიხედვით: 5 ჩანაცვლდება 10-ით )
            input.splice(i,2) //ჩვენი სიიდან უნდა წაიშალოს i ინდექზე მდგომი ელემნტიდან მომდევნო ორი ელემეტნი ...(ძნ სიგიჟეაააა) - ანუ წაიშლება გამრვლება და 2იანი.
            i--  // იმისთვის , რომ წვდომა გვქონეს მათემატიკური ოპერაციის ინდექსზე მდგომ ელემენტთან (ჩვენ შემთხვევაშ ი5თან) უნდა შევამციროთ i ...გამრავლება და მაგის შემდეგ ინდექსზე მდგომი ელემენტი იშლება(ქრება) და ჩვენ უნდა გვქოდეს მათემატკურ ოპერაციიასთან წვდომა
        }else if(input[i] == '/'){ // თუ სიაში არსებული ელემენტი უდრის გაყოფას
            result = parseFloat(input[i-1]) / parseFloat(input[i+1]) // result-ს ენიჭება მნიშვნელობა i ინდექსზე მდგომი ანუ აყოფის წინა ინდექსზე მდგომი რიცვისა და გაყოფის შემდეგ ინდექსზე მდგომი რიცხვების განაყოფის
            input[i-1] = result // გაყოფის წინ მდგომი ელემენტს გადაეწერება result-ის მნიშვნელობა
            input.splice(i,2) // გაყოფა და მაგის შემდეგ ინდექსზე მდგომი ელემენტი წაიშლებიან სიიდან 
            i -- 
        }
    }

    //მიმატებისა და გამოკლების გაიდლაინი 
    result = perseFloat(input[0]) // result უტოლდება სიაში არსებულ პირველ ელემენტს, რადგან მას უნდა მიემატოს ან გამოაკლდეს მონაცემი
    //i რატომ უდრის 1-ს? - იმიტომ რომ მენული იდექსზე მდგომი ელემენტი არ გვაინტერესებს - მაგის მნიშვნელობა მინიჭებული აქვს result-ს
    for(let i = 1 ; i < input.length ; i ++){ // ვატრიალებთ ლუფს, რათა მივწვდეთ სიაშ იარსებულ თითოეულ ელემენტს
        if(input[i] == '+'){ // თუ i ინდექსზე მდგომი ელემენტი ტოლია პლუს-ის
            result += parseFloat(input[i + 1]) // result-ს ემატება  პლუსის მარჯვენა ინდექსზე დმგომი ელემენტსი (ჩვენ შემთხვევაში 5-ს ემატება 10)
        }else if (input[i] == '-'){ // თუ i ინდექსზე მდგომი ელემენტი როლის მინუსის
            result -= perseFloat(input[i + 1]) // result-ს აკლდება მინუსის მარჯვენა ინდექსზე მდგომი ელემენტი
        }
    }

    view.innerHTML = result // ეკრანზე გამოვა შედეგი
})

function reset(){
    input = []
    view.innerHTML = ''
}